---
description: Regras para organização de componentes UI - separar shadcn dos personalizados
alwaysApply: true
---

# 🎨 Regras de Organização de Componentes UI

## 🎯 **APLICAÇÃO OBRIGATÓRIA**

Esta regra **SEMPRE** deve ser aplicada para manter a separação clara entre componentes shadcn/ui e componentes personalizados.

## 📋 **ESTRUTURA OBRIGATÓRIA**

### **✅ PASTA `@components/ui/` - APENAS SHADCN**

A pasta `src/components/ui/` deve conter **EXCLUSIVAMENTE** componentes padrão do shadcn/ui:

```
src/components/ui/
├── alert.tsx           ✅ shadcn padrão
├── avatar.tsx          ✅ shadcn padrão
├── badge.tsx           ✅ shadcn padrão
├── breadcrumb.tsx      ✅ shadcn padrão
├── button.tsx          ✅ shadcn padrão
├── calendar.tsx        ✅ shadcn padrão
├── card.tsx            ✅ shadcn padrão
├── chart.tsx           ✅ shadcn padrão
├── checkbox.tsx        ✅ shadcn padrão
├── collapsible.tsx     ✅ shadcn padrão
├── dialog.tsx          ✅ shadcn padrão
├── dropdown-menu.tsx   ✅ shadcn padrão
├── form.tsx            ✅ shadcn padrão
├── input.tsx           ✅ shadcn padrão
├── label.tsx           ✅ shadcn padrão
├── popover.tsx         ✅ shadcn padrão
├── radio-group.tsx     ✅ shadcn padrão
├── scroll-area.tsx     ✅ shadcn padrão
├── select.tsx          ✅ shadcn padrão
├── separator.tsx       ✅ shadcn padrão
├── sheet.tsx           ✅ shadcn padrão
├── sidebar.tsx         ✅ shadcn padrão
├── skeleton.tsx        ✅ shadcn padrão
├── sonner.tsx          ✅ shadcn padrão
├── switch.tsx          ✅ shadcn padrão
├── table.tsx           ✅ shadcn padrão
├── textarea.tsx        ✅ shadcn padrão
└── tooltip.tsx         ✅ shadcn padrão
```

### **❌ COMPONENTES PERSONALIZADOS IDENTIFICADOS**

Estes componentes **NÃO** são padrão shadcn e devem ser movidos:

```
❌ INCORRETO - Estão em ui/ mas são personalizados:
├── routine-status-badge.tsx    ❌ personalizado
└── textarea-with-counter.tsx   ❌ personalizado
```

### **✅ PASTA `@components/custom/` - COMPONENTES PERSONALIZADOS**

Todos os componentes personalizados devem ficar em:

```
src/components/custom/
├── routine-status-badge.tsx    ✅ componente personalizado
├── textarea-with-counter.tsx   ✅ componente personalizado
└── index.ts                    ✅ barrel export
```

## 📋 **COMO IDENTIFICAR COMPONENTES PERSONALIZADOS**

### **Características de Componentes Shadcn Padrão:**
- Seguem exatamente a documentação oficial do shadcn/ui
- Não têm lógica de negócio específica do projeto
- Podem ser atualizados via CLI do shadcn
- Nomes correspondem aos componentes oficiais

### **Características de Componentes Personalizados:**
- Contêm lógica específica do projeto
- Combinam múltiplos componentes shadcn
- Têm props customizadas para necessidades específicas
- Não existem na documentação oficial do shadcn

## 🎯 **ESTRUTURA RECOMENDADA**

### **Para Componentes Custom:**
```typescript
// src/components/custom/component-name.tsx
import { ShadcnComponent } from "@/components/ui/shadcn-component"

interface CustomComponentProps {
  // Props específicas do projeto
}

export function CustomComponent({ ...props }: CustomComponentProps) {
  // Lógica personalizada + componentes shadcn
}
```

### **Barrel Export Pattern:**
```typescript
// src/components/custom/index.ts
export { Component1 } from './component-1'
export { Component2 } from './component-2'
```

## 🚫 **REGRAS DE PREVENÇÃO**

### **1. O que NUNCA fazer em `@ui/`:**

- ❌ Criar componentes personalizados
- ❌ Modificar significativamente componentes shadcn
- ❌ Adicionar lógica de negócio específica
- ❌ Criar componentes compostos personalizados

### **2. O que SEMPRE fazer em `@custom/`:**

- ✅ Componentes específicos do projeto
- ✅ Extensões de componentes shadcn
- ✅ Componentes com lógica de negócio
- ✅ Componentes compostos personalizados

## 🔍 **COMO VALIDAR ORGANIZAÇÃO**

### **Sinais de Componente Mal Posicionado:**

**Em `@ui/` mas deveria estar em `@custom/`:**
- Arquivo contém interfaces Props customizadas
- Combina múltiplos componentes shadcn
- Tem lógica específica do projeto
- Nome não existe na documentação oficial do shadcn

**Em `@custom/` mas deveria estar em `@ui/`:**
- É um componente oficial do shadcn
- Pode ser instalado via CLI do shadcn
- Não tem lógica de negócio específica

## 📝 **CHECKLIST DE VALIDAÇÃO**

Antes de adicionar um componente:

- [ ] É um componente padrão do shadcn/ui?
- [ ] Se SIM → vai para `@components/ui/`
- [ ] Se NÃO → vai para `@components/custom/`
- [ ] Atualizei todos os imports?
- [ ] Criei/atualizei barrel export?

## 🎯 **BENEFÍCIOS**

1. **Clareza:** Separação clara entre componentes padrão e personalizados
2. **Manutenção:** Facilita updates do shadcn/ui
3. **Organização:** Estrutura consistente e previsível
4. **Colaboração:** Novos devs sabem onde encontrar/adicionar componentes

## 💡 **CONVENÇÕES ADICIONAIS**

### **Nomenclatura:**
- Componentes shadcn: manter nomes originais
- Componentes custom: usar kebab-case no arquivo, PascalCase no component

### **Documentação:**
- Componentes custom devem ter JSDoc
- Explicar diferenças do componente base (se aplicável)

---

**Esta regra é OBRIGATÓRIA para manter a organização e facilitar a manutenção do projeto.**
