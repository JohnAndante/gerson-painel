---
description: Regras de organiza√ß√£o de imports em todos os arquivos TypeScript/React
alwaysApply: true
---

# üì¶ Regras de Organiza√ß√£o de Imports

## üéØ **APLICA√á√ÉO OBRIGAT√ìRIA**

Esta regra **SEMPRE** deve ser aplicada em todos os arquivos `.ts`, `.tsx`, `.js`, `.jsx` do projeto.

## üìã **Ordem Obrigat√≥ria de Imports**

### **1. Externos (Third-party libraries)**
```typescript
// React e React-related SEMPRE primeiro
import React, { useState, useEffect, useCallback } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { useNavigate, useParams, useLocation } from "react-router-dom";

// Outras bibliotecas externas
import { toast } from "sonner";
import { Loader2, Plus, Edit, Calendar } from "lucide-react";
import * as z from "zod";
```

### **2. Internos do projeto (com @/ alias)**
```typescript
// UI Components
import { Button } from "@/components/ui/button";
import { Form, FormControl, FormField, FormItem } from "@/components/ui/form";
import { PageContainer } from "@/components/layout/page-container";

// Controllers/APIs
import { agentsApi } from "@/controllers/agents-api";
import { routinesApi } from "@/controllers/routines-api";

// Stores/Hooks globais
import { useAuth } from "@/stores/auth";
import { useToast } from "@/hooks/use-toast";

// Types globais
import type { ApiResponse } from "@/types/api";
import type { AgentDetails } from "@/types/agent";

// Constants
import { AGENT_FORM_DEFAULTS } from "@/constants/agent";
import { APP_CONFIG } from "@/constants/app";
```

### **3. Locais da p√°gina/componente (SEMPRE por √∫ltimo)**
```typescript
// Hooks locais
import { useLogin } from "./hooks";
import { useAgentForm, useAgentsList } from "./hooks";

// Types locais
import type { LoginFormData } from "./types";
import type { AgentFormProps, AgentViewMode } from "./types";

// Valida√ß√µes locais
import { loginSchema } from "./validation";
import { agentSchema } from "./validation";

// Components locais
import { LoginHeader, LoginFooter, ErrorAlert } from "./components";
import { AgentsList, AgentForm, AgentView } from "./components";
```

## üö´ **REGRAS DE SEPARA√á√ÉO**

### **SEMPRE separar grupos com linha em branco:**
```typescript
import React from "react";           // ‚Üê Externos
import { useForm } from "react-hook-form";

import { Button } from "@/components/ui/button";    // ‚Üê Internos
import { useAuth } from "@/stores/auth";

import { useLogin } from "./hooks";   // ‚Üê Locais
import { LoginHeader } from "./components";
```

### **NUNCA misturar grupos:**
```typescript
// ‚ùå ERRADO - tipos misturados
import React from "react";
import { useLogin } from "./hooks";  // ‚Üê Local misturado com externo
import { Button } from "@/components/ui/button";

// ‚úÖ CORRETO - grupos separados
import React from "react";

import { Button } from "@/components/ui/button";

import { useLogin } from "./hooks";
```

## üìù **REGRAS ESPEC√çFICAS**

### **1. Types sempre ap√≥s imports normais**
```typescript
// ‚úÖ CORRETO
import { agentsApi } from "@/controllers/agents-api";
import type { AgentDetails } from "@/types/agent";

// ‚ùå ERRADO
import type { AgentDetails } from "@/types/agent";
import { agentsApi } from "@/controllers/agents-api";
```

### **2. React imports sempre primeiro nos externos**
```typescript
// ‚úÖ CORRETO
import React, { useState, useEffect } from "react";
import { useForm } from "react-hook-form";

// ‚ùå ERRADO
import { useForm } from "react-hook-form";
import React, { useState, useEffect } from "react";
```

### **3. Destructuring ordenado alfabeticamente**
```typescript
// ‚úÖ CORRETO
import { useCallback, useEffect, useState } from "react";
import { Button, Calendar, Loader2, Plus } from "lucide-react";

// ‚ùå ERRADO
import { useState, useEffect, useCallback } from "react";
import { Plus, Button, Loader2, Calendar } from "lucide-react";
```

### **4. Imports de pasta local sempre usar ./relative**
```typescript
// ‚úÖ CORRETO
import { useLogin } from "./hooks";
import { LoginHeader } from "./components";

// ‚ùå ERRADO
import { useLogin } from "../LoginPage/hooks";
import { LoginHeader } from "@/pages/LoginPage/components/LoginHeader";
```

## üîç **EXEMPLOS COMPLETOS**

### **Arquivo de Page (index.tsx)**
```typescript
import React, { useEffect } from "react";
import { Loader2, Plus, Edit } from "lucide-react";

import { PageContainer } from "@/components/layout/page-container";
import { Button } from "@/components/ui/button";

import { useAgentes } from "./hooks";
import type { AgentViewMode } from "./types";
import { AgentsList, AgentForm, AgentView } from "./components";
```

### **Arquivo de Hook**
```typescript
import { useState, useEffect, useCallback } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import { useNavigate, useParams } from "react-router-dom";
import { toast } from "sonner";

import { agentsApi } from "@/controllers/agents-api";
import { useAuth } from "@/stores/auth";
import type { ApiResponse } from "@/types/api";
import type { AgentDetails } from "@/types/agent";
import { AGENT_FORM_DEFAULTS } from "@/constants/agent";

import { agentSchema } from "./validation";
import type { AgentFormData, AgentsPageState } from "./types";
```

### **Arquivo de Component**
```typescript
import React from "react";
import { Save, X, Bot } from "lucide-react";

import { Button } from "@/components/ui/button";
import { Form } from "@/components/ui/form";
import { Card, CardContent } from "@/components/ui/card";

import { useAgentForm } from "../hooks";
import type { AgentFormProps } from "../types";
import { AgentErrorAlert, AgentNameField } from "./form";
```

## ‚úÖ **CHECKLIST DE VALIDA√á√ÉO**

Antes de considerar o arquivo correto, verificar:

- [ ] React imports est√£o primeiro nos externos?
- [ ] Grupos est√£o separados por linha em branco?
- [ ] Types est√£o ap√≥s imports normais em cada grupo?
- [ ] Destructuring est√° ordenado alfabeticamente?
- [ ] Imports locais usam "./relative" paths?
- [ ] N√£o h√° mistura entre grupos?
- [ ] Ordem: Externos ‚Üí Internos (@/) ‚Üí Locais (./)

## üéØ **OBJETIVO**

Manter **consist√™ncia absoluta** na organiza√ß√£o de imports em todo o projeto, facilitando:
- Leitura e navega√ß√£o do c√≥digo
- Identifica√ß√£o r√°pida de depend√™ncias
- Manuten√ß√£o e refatora√ß√£o
- Onboarding de novos desenvolvedores
